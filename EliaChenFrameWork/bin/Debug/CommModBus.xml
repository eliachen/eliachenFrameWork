<?xml version="1.0"?>
<doc>
<assembly>
<name>
CommModBus
</name>
</assembly>
<members>
<member name="T:CommModBus.Comm.CommPort.ComPortWay.Model_Strgt_Jud_Dly_Jud">
	<summary>
 直接模式+校验模式+延迟模式+校验模式
 </summary>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.IEliaChenCommPortConfig">
	<summary>
 通讯前的参数设置
 </summary>
	<remarks></remarks>
</member><member name="T:CommModBus.EliaChen.Engine.EliaChenCircleEngine">
	<summary>
 循环引擎用于轮询一个任务
 </summary>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.CommPort.IEliaChenCommPort.CommPortWay">
	<summary>
 通讯收发的处理参数及其模式
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.CommPort.IEliaChenCommPort.CommPortConfig">
	<summary>
 通讯参数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.IEliaChenCommPort.Connect">
	<summary>
 连接建立
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.IEliaChenCommPort.DisConnect">
	<summary>
 断开连接
 </summary>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.IEliaChenCommPort.RecvDataHandle">
	<summary>
 委托：数据收到的字节数组
 </summary>
	<param name="RecvArrByte">接收到的字节数组</param>
	<remarks></remarks>
</member><member name="E:CommModBus.Comm.CommPort.IEliaChenCommPort.RecvDataEvent">
	<summary>
 事件：数据来到后的字节数组
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.IEliaChenCommPort.Send(System.Byte[])">
	<summary>
 发送数据的接口
 </summary>
	<param name="SendArrByte"></param>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.IEliaChenCommPort.Receive">
	<summary>
 接收数据接口（及时的,一次把缓冲区的数据取出来）
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.IEliaChenCommPort.ReceiveAsWay(CommModBus.Comm.CommPort.IEliaChenCommPortWay)">
	<summary>
 接收数据接口(约定格式)
 </summary>
	<param name="Way"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.IEliaChenCommPort">
	<summary>
 通讯管理必须的通讯管理接口
 定义: 数据局接收的接口
 定义：数据发出的接口
 </summary>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.ComPortWay.Model_Strgt_Jud">
	<summary>
 直接模式+校验模式
 直接模式基础上,进行数据校验
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.EliaChenDNS.GetAddr(System.String)">
	<summary>
 通过DNS解析对应的IP地址
 </summary>
	<param name="Str"></param>
	<returns>远程地址</returns>
	<remarks></remarks>
</member><member name="M:CommModBus.EliaChenDNS.GetLocalAddr">
	<summary>
 通过DNS获取本机的ip地址
 </summary>
	<returns>本机地址的数组</returns>
	<remarks></remarks>
</member><member name="T:CommModBus.EliaChen.Engine.IEngineJob">
	<summary>
 在循环引擎内执行的动作
 </summary>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenComm.CommPort">
	<summary>
 可能需要的通讯接口
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenComm.CommListRecver">
	<summary>
 通讯的接收对象
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenComm.CommBasicBuffer">
	<summary>
 存取底层通讯上来的字节数组集合
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommonMethod.CRC16(System.Byte[],System.Byte@,System.Byte@)">
	<summary>
 CRC16校验编码
 </summary>
	<param name="data"></param>
	<param name="ReturnDatalo"></param>
	<param name="ReturnDatahi"></param>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.ComPortWay.Model_Basic.CommDeal(CommModBus.Comm.CommPort.IEliaChenCommPort@)">
	<summary>
 通讯处理的模式
 </summary>
	<param name="Comm"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.ComPortWay.Model_Basic">
	<summary>
 基类实现通讯的基本模式
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.Port.EliaChenSerialPort.Receive_Stra">
	<summary>
 接收:直接由当前缓存中取数据(没有数据会回一个Length=0的空字节数组)
 </summary>
	<returns></returns>
</member><member name="M:CommModBus.Comm.CommPort.Port.EliaChenSerialPort.Receive_Way(CommModBus.Comm.CommPort.IEliaChenCommPortWay)">
	<summary>
 接收:按照接口策略处理
 </summary>
	<param name="Way"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.Proj.ModBusRtu.ModBus_Slave.ModBusSlaveReg.Reg_Ex(System.Collections.Generic.List{System.Object},System.String)">
	<summary>
 修改寄存器中的值,校验方式
 </summary>
	<param name="ListVal"></param>
	<param name="FrtVal"></param>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.Proj.ModBusRtu.ModuleRecv.DecodeRecvAdv(CommModBus.Comm.Proj.ModBusRtu.ModuleRecvSt.StBasicRecv,System.Byte,System.Type)">
	<summary>
 用于还原数据区
 </summary>
	<param name="StBas">基本数据结构</param>
	<param name="NumCount">单个数据长度</param>
	<param name="Type"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.ComPortWay.Model_Straight">
	<summary>
 直接模式
 直接返回通讯口当前能读到的所有数据
 </summary>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.ComPortWay.Model_Dly_Jud">
	<summary>
 延迟模式+校验模式
 延迟读取后进行校验
 </summary>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommRecver.CommGroup">
	<summary>
 通讯的分组
 可以作为对应设备的标签
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommRecver.CommParallelable">
	<summary>
 通讯的并行性
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommRecver.CommPort">
	<summary>
 通讯接口
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommRecver.CommWay">
	<summary>
 通信策略
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.myComm.IEliaChenCommRecver.CommCrcArrByte">
	<summary>
 通讯循环招测命令
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.myComm.IEliaChenCommRecver.CommInitial">
	<summary>
 通讯初始化
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.myComm.IEliaChenCommRecver.CommReset">
	<summary>
 通讯复位
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.myComm.IEliaChenCommRecver.CommStop">
	<summary>
 通讯停止
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.myComm.IEliaChenCommRecver.Comm_WhenErr">
	<summary>
 当通讯错误时触发的处理
 </summary>
	<remarks></remarks>
</member><member name="P:CommModBus.My.Resources.Resources.ResourceManager">
	<summary>
  返回此类使用的缓存的 ResourceManager 实例。
</summary>
</member><member name="P:CommModBus.My.Resources.Resources.Culture">
	<summary>
  使用此强类型资源类，为所有资源查找
  重写当前线程的 CurrentUICulture 属性。
</summary>
</member><member name="T:CommModBus.My.Resources.Resources">
	<summary>
  一个强类型的资源类，用于查找本地化的字符串等。
</summary>
</member><member name="P:CommModBus.Comm.CommPort.IEliaChenCommPortWay.TimeDelaySend">
	<summary>
 时间:发送前的延迟
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.CommPort.IEliaChenCommPortWay.TimeOutRecv">
	<summary>
 时间:接收数据触发后延迟检测缓冲区
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.IEliaChenCommPortWay.CommDeal(CommModBus.Comm.CommPort.IEliaChenCommPort@)">
	<summary>
 当次通讯获取的方法
 </summary>
	<param name="Comm"></param>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.IEliaChenCommPortWay.CommJug(System.Byte[])">
	<summary>
 具有特定格式帧的校验
 </summary>
	<param name="ArrByte"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.IEliaChenCommPortWay">
	<summary>
 通讯收到数据后基本处理方式,核心是为了判定一次通讯的结束
 两种模型：1、延迟停等 2、字节流判断
 </summary>
	<remarks></remarks>
</member><member name="M:CommModBus.Comm.CommPort.ComPortWay.Model_Delay.GetDelayData(CommModBus.Comm.CommPort.IEliaChenCommPort@,System.Int32)">
	<summary>
 延迟获取数据模式
 </summary>
	<param name="CommPort">通讯端口</param>
	<param name="DelayTime">延迟时间</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.CommPort.ComPortWay.Model_Delay">
	<summary>
 延迟模式
 延迟回检测直到读出所有缓存中的数据
 </summary>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommWay.TimeScan">
	<summary>
 设备的扫描时间
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommWay.TimeOrder">
	<summary>
 命令与命令间的间隔时间
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommWay.TimeErrResume">
	<summary>
 故障恢复的时间
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommWay.CountReadFailReTry">
	<summary>
 一次采集失败后的重试次数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommWay.CountWriteFailReTry">
	<summary>
 一次下发失败后的重试次数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:CommModBus.Comm.myComm.IEliaChenCommWay.CountErr">
	<summary>
 判断通讯失败的次数
 </summary>
	<value></value>
	<returns></returns>
	<remarks></remarks>
</member><member name="T:CommModBus.Comm.myComm.IEliaChenCommWay">
	<summary>
 抽象的通讯参数模式
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>